# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import sympy.physics.mechanics.particle as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    none_type_0 = None
    module_0.Particle(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = "Uy}]&68k*b"
    particle_0 = module_0.Particle(str_0)
    assert (
        f"{type(particle_0).__module__}.{type(particle_0).__qualname__}"
        == "sympy.physics.mechanics.particle.Particle"
    )
    assert particle_0.points == []
    particle_0.kinetic_energy(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = "Uy}]&68k*b"
    particle_0 = module_0.Particle(str_0)
    assert (
        f"{type(particle_0).__module__}.{type(particle_0).__qualname__}"
        == "sympy.physics.mechanics.particle.Particle"
    )
    assert particle_0.points == []
    particle_1 = module_0.Particle(str_0)
    assert particle_1.points == []
    particle_0.angular_momentum(particle_1, particle_1)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "Uy}]&68k*b"
    particle_0 = module_0.Particle(str_0)
    assert (
        f"{type(particle_0).__module__}.{type(particle_0).__qualname__}"
        == "sympy.physics.mechanics.particle.Particle"
    )
    assert particle_0.points == []
    particle_0.parallel_axis(str_0, particle_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "Uy}]&68k*b"
    particle_0 = module_0.Particle(str_0)
    assert (
        f"{type(particle_0).__module__}.{type(particle_0).__qualname__}"
        == "sympy.physics.mechanics.particle.Particle"
    )
    assert particle_0.points == []
    particle_1 = module_0.Particle(str_0)
    assert particle_1.points == []
    particle_1.linear_momentum(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "Uy}]&68k*b"
    particle_0 = module_0.Particle(str_0)
    assert (
        f"{type(particle_0).__module__}.{type(particle_0).__qualname__}"
        == "sympy.physics.mechanics.particle.Particle"
    )
    assert particle_0.points == []
    particle_0.set_potential_energy(particle_0)
