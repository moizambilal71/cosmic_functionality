# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import sympy.physics.mechanics.lagrange as module_0


def test_case_0():
    none_type_0 = None
    with pytest.raises(TypeError):
        module_0.LagrangesMethod(none_type_0, none_type_0, frame=none_type_0)


def test_case_1():
    bool_0 = True
    with pytest.raises(TypeError):
        module_0.LagrangesMethod(bool_0, bool_0, bool_0, nonhol_coneqs=bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bytes_0 = b"\x96\xef\xf6\x111"
    module_0.LagrangesMethod(bytes_0, bytes_0, bytes_0)


def test_case_3():
    bytes_0 = b""
    lagranges_method_0 = module_0.LagrangesMethod(bytes_0, bytes_0, bytes_0)
    assert (
        f"{type(lagranges_method_0).__module__}.{type(lagranges_method_0).__qualname__}"
        == "sympy.physics.mechanics.lagrange.LagrangesMethod"
    )
    assert lagranges_method_0.eom is None
    assert (
        f"{type(lagranges_method_0.lam_coeffs).__module__}.{type(lagranges_method_0.lam_coeffs).__qualname__}"
        == "sympy.matrices.dense.MutableDenseMatrix"
    )
    assert len(lagranges_method_0.lam_coeffs) == 0
    assert lagranges_method_0.inertial is None
    assert (
        f"{type(lagranges_method_0.lam_vec).__module__}.{type(lagranges_method_0.lam_vec).__qualname__}"
        == "sympy.matrices.dense.MutableDenseMatrix"
    )
    assert len(lagranges_method_0.lam_vec) == 0
    assert (
        f"{type(lagranges_method_0.coneqs).__module__}.{type(lagranges_method_0.coneqs).__qualname__}"
        == "sympy.matrices.dense.MutableDenseMatrix"
    )
    assert len(lagranges_method_0.coneqs) == 0
    assert (
        f"{type(module_0.LagrangesMethod.mass_matrix).__module__}.{type(module_0.LagrangesMethod.mass_matrix).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.mass_matrix_full).__module__}.{type(module_0.LagrangesMethod.mass_matrix_full).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.forcing).__module__}.{type(module_0.LagrangesMethod.forcing).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.forcing_full).__module__}.{type(module_0.LagrangesMethod.forcing_full).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.q).__module__}.{type(module_0.LagrangesMethod.q).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.u).__module__}.{type(module_0.LagrangesMethod.u).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.bodies).__module__}.{type(module_0.LagrangesMethod.bodies).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.forcelist).__module__}.{type(module_0.LagrangesMethod.forcelist).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.loads).__module__}.{type(module_0.LagrangesMethod.loads).__qualname__}"
        == "builtins.property"
    )


def test_case_4():
    int_0 = 2713
    with pytest.raises(TypeError):
        module_0.LagrangesMethod(int_0, int_0, frame=int_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    bytes_0 = b""
    lagranges_method_0 = module_0.LagrangesMethod(bytes_0, bytes_0, bytes_0)
    assert (
        f"{type(lagranges_method_0).__module__}.{type(lagranges_method_0).__qualname__}"
        == "sympy.physics.mechanics.lagrange.LagrangesMethod"
    )
    assert lagranges_method_0.eom is None
    assert (
        f"{type(lagranges_method_0.lam_coeffs).__module__}.{type(lagranges_method_0.lam_coeffs).__qualname__}"
        == "sympy.matrices.dense.MutableDenseMatrix"
    )
    assert len(lagranges_method_0.lam_coeffs) == 0
    assert lagranges_method_0.inertial is None
    assert (
        f"{type(lagranges_method_0.lam_vec).__module__}.{type(lagranges_method_0.lam_vec).__qualname__}"
        == "sympy.matrices.dense.MutableDenseMatrix"
    )
    assert len(lagranges_method_0.lam_vec) == 0
    assert (
        f"{type(lagranges_method_0.coneqs).__module__}.{type(lagranges_method_0.coneqs).__qualname__}"
        == "sympy.matrices.dense.MutableDenseMatrix"
    )
    assert len(lagranges_method_0.coneqs) == 0
    assert (
        f"{type(module_0.LagrangesMethod.mass_matrix).__module__}.{type(module_0.LagrangesMethod.mass_matrix).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.mass_matrix_full).__module__}.{type(module_0.LagrangesMethod.mass_matrix_full).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.forcing).__module__}.{type(module_0.LagrangesMethod.forcing).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.forcing_full).__module__}.{type(module_0.LagrangesMethod.forcing_full).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.q).__module__}.{type(module_0.LagrangesMethod.q).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.u).__module__}.{type(module_0.LagrangesMethod.u).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.bodies).__module__}.{type(module_0.LagrangesMethod.bodies).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.forcelist).__module__}.{type(module_0.LagrangesMethod.forcelist).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.loads).__module__}.{type(module_0.LagrangesMethod.loads).__qualname__}"
        == "builtins.property"
    )
    lagranges_method_0.forcing_full()


@pytest.mark.xfail(strict=True)
def test_case_6():
    bytes_0 = b""
    lagranges_method_0 = module_0.LagrangesMethod(bytes_0, bytes_0, bytes_0)
    assert (
        f"{type(lagranges_method_0).__module__}.{type(lagranges_method_0).__qualname__}"
        == "sympy.physics.mechanics.lagrange.LagrangesMethod"
    )
    assert lagranges_method_0.eom is None
    assert (
        f"{type(lagranges_method_0.lam_coeffs).__module__}.{type(lagranges_method_0.lam_coeffs).__qualname__}"
        == "sympy.matrices.dense.MutableDenseMatrix"
    )
    assert len(lagranges_method_0.lam_coeffs) == 0
    assert lagranges_method_0.inertial is None
    assert (
        f"{type(lagranges_method_0.lam_vec).__module__}.{type(lagranges_method_0.lam_vec).__qualname__}"
        == "sympy.matrices.dense.MutableDenseMatrix"
    )
    assert len(lagranges_method_0.lam_vec) == 0
    assert (
        f"{type(lagranges_method_0.coneqs).__module__}.{type(lagranges_method_0.coneqs).__qualname__}"
        == "sympy.matrices.dense.MutableDenseMatrix"
    )
    assert len(lagranges_method_0.coneqs) == 0
    assert (
        f"{type(module_0.LagrangesMethod.mass_matrix).__module__}.{type(module_0.LagrangesMethod.mass_matrix).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.mass_matrix_full).__module__}.{type(module_0.LagrangesMethod.mass_matrix_full).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.forcing).__module__}.{type(module_0.LagrangesMethod.forcing).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.forcing_full).__module__}.{type(module_0.LagrangesMethod.forcing_full).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.q).__module__}.{type(module_0.LagrangesMethod.q).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.u).__module__}.{type(module_0.LagrangesMethod.u).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.bodies).__module__}.{type(module_0.LagrangesMethod.bodies).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.forcelist).__module__}.{type(module_0.LagrangesMethod.forcelist).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.loads).__module__}.{type(module_0.LagrangesMethod.loads).__qualname__}"
        == "builtins.property"
    )
    lagranges_method_0.mass_matrix()


@pytest.mark.xfail(strict=True)
def test_case_7():
    bytes_0 = b""
    lagranges_method_0 = module_0.LagrangesMethod(bytes_0, bytes_0, bytes_0)
    assert (
        f"{type(lagranges_method_0).__module__}.{type(lagranges_method_0).__qualname__}"
        == "sympy.physics.mechanics.lagrange.LagrangesMethod"
    )
    assert lagranges_method_0.eom is None
    assert (
        f"{type(lagranges_method_0.lam_coeffs).__module__}.{type(lagranges_method_0.lam_coeffs).__qualname__}"
        == "sympy.matrices.dense.MutableDenseMatrix"
    )
    assert len(lagranges_method_0.lam_coeffs) == 0
    assert lagranges_method_0.inertial is None
    assert (
        f"{type(lagranges_method_0.lam_vec).__module__}.{type(lagranges_method_0.lam_vec).__qualname__}"
        == "sympy.matrices.dense.MutableDenseMatrix"
    )
    assert len(lagranges_method_0.lam_vec) == 0
    assert (
        f"{type(lagranges_method_0.coneqs).__module__}.{type(lagranges_method_0.coneqs).__qualname__}"
        == "sympy.matrices.dense.MutableDenseMatrix"
    )
    assert len(lagranges_method_0.coneqs) == 0
    assert (
        f"{type(module_0.LagrangesMethod.mass_matrix).__module__}.{type(module_0.LagrangesMethod.mass_matrix).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.mass_matrix_full).__module__}.{type(module_0.LagrangesMethod.mass_matrix_full).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.forcing).__module__}.{type(module_0.LagrangesMethod.forcing).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.forcing_full).__module__}.{type(module_0.LagrangesMethod.forcing_full).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.q).__module__}.{type(module_0.LagrangesMethod.q).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.u).__module__}.{type(module_0.LagrangesMethod.u).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.bodies).__module__}.{type(module_0.LagrangesMethod.bodies).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.forcelist).__module__}.{type(module_0.LagrangesMethod.forcelist).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.loads).__module__}.{type(module_0.LagrangesMethod.loads).__qualname__}"
        == "builtins.property"
    )
    lagranges_method_0.u()


@pytest.mark.xfail(strict=True)
def test_case_8():
    bytes_0 = b""
    lagranges_method_0 = module_0.LagrangesMethod(bytes_0, bytes_0, bytes_0)
    assert (
        f"{type(lagranges_method_0).__module__}.{type(lagranges_method_0).__qualname__}"
        == "sympy.physics.mechanics.lagrange.LagrangesMethod"
    )
    assert lagranges_method_0.eom is None
    assert (
        f"{type(lagranges_method_0.lam_coeffs).__module__}.{type(lagranges_method_0.lam_coeffs).__qualname__}"
        == "sympy.matrices.dense.MutableDenseMatrix"
    )
    assert len(lagranges_method_0.lam_coeffs) == 0
    assert lagranges_method_0.inertial is None
    assert (
        f"{type(lagranges_method_0.lam_vec).__module__}.{type(lagranges_method_0.lam_vec).__qualname__}"
        == "sympy.matrices.dense.MutableDenseMatrix"
    )
    assert len(lagranges_method_0.lam_vec) == 0
    assert (
        f"{type(lagranges_method_0.coneqs).__module__}.{type(lagranges_method_0.coneqs).__qualname__}"
        == "sympy.matrices.dense.MutableDenseMatrix"
    )
    assert len(lagranges_method_0.coneqs) == 0
    assert (
        f"{type(module_0.LagrangesMethod.mass_matrix).__module__}.{type(module_0.LagrangesMethod.mass_matrix).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.mass_matrix_full).__module__}.{type(module_0.LagrangesMethod.mass_matrix_full).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.forcing).__module__}.{type(module_0.LagrangesMethod.forcing).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.forcing_full).__module__}.{type(module_0.LagrangesMethod.forcing_full).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.q).__module__}.{type(module_0.LagrangesMethod.q).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.u).__module__}.{type(module_0.LagrangesMethod.u).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.bodies).__module__}.{type(module_0.LagrangesMethod.bodies).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.forcelist).__module__}.{type(module_0.LagrangesMethod.forcelist).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.loads).__module__}.{type(module_0.LagrangesMethod.loads).__qualname__}"
        == "builtins.property"
    )
    lagranges_method_0.rhs()


def test_case_9():
    bytes_0 = b""
    lagranges_method_0 = module_0.LagrangesMethod(bytes_0, bytes_0)
    assert (
        f"{type(lagranges_method_0).__module__}.{type(lagranges_method_0).__qualname__}"
        == "sympy.physics.mechanics.lagrange.LagrangesMethod"
    )
    assert lagranges_method_0.eom is None
    assert (
        f"{type(lagranges_method_0.lam_coeffs).__module__}.{type(lagranges_method_0.lam_coeffs).__qualname__}"
        == "sympy.matrices.dense.MutableDenseMatrix"
    )
    assert len(lagranges_method_0.lam_coeffs) == 0
    assert lagranges_method_0.inertial is None
    assert (
        f"{type(lagranges_method_0.lam_vec).__module__}.{type(lagranges_method_0.lam_vec).__qualname__}"
        == "sympy.matrices.dense.MutableDenseMatrix"
    )
    assert len(lagranges_method_0.lam_vec) == 0
    assert (
        f"{type(lagranges_method_0.coneqs).__module__}.{type(lagranges_method_0.coneqs).__qualname__}"
        == "sympy.matrices.dense.MutableDenseMatrix"
    )
    assert len(lagranges_method_0.coneqs) == 0
    assert (
        f"{type(module_0.LagrangesMethod.mass_matrix).__module__}.{type(module_0.LagrangesMethod.mass_matrix).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.mass_matrix_full).__module__}.{type(module_0.LagrangesMethod.mass_matrix_full).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.forcing).__module__}.{type(module_0.LagrangesMethod.forcing).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.forcing_full).__module__}.{type(module_0.LagrangesMethod.forcing_full).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.q).__module__}.{type(module_0.LagrangesMethod.q).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.u).__module__}.{type(module_0.LagrangesMethod.u).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.bodies).__module__}.{type(module_0.LagrangesMethod.bodies).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.forcelist).__module__}.{type(module_0.LagrangesMethod.forcelist).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.loads).__module__}.{type(module_0.LagrangesMethod.loads).__qualname__}"
        == "builtins.property"
    )
    var_0 = lagranges_method_0.to_linearizer()
    assert (
        f"{type(var_0).__module__}.{type(var_0).__qualname__}"
        == "sympy.physics.mechanics.linearize.Linearizer"
    )
    assert (
        f"{type(var_0.f_0).__module__}.{type(var_0.f_0).__qualname__}"
        == "sympy.matrices.dense.MutableDenseMatrix"
    )
    assert len(var_0.f_0) == 0
    assert (
        f"{type(var_0.f_1).__module__}.{type(var_0.f_1).__qualname__}"
        == "sympy.matrices.dense.MutableDenseMatrix"
    )
    assert len(var_0.f_1) == 0
    assert (
        f"{type(var_0.f_2).__module__}.{type(var_0.f_2).__qualname__}"
        == "sympy.matrices.dense.MutableDenseMatrix"
    )
    assert len(var_0.f_2) == 0
    assert (
        f"{type(var_0.f_3).__module__}.{type(var_0.f_3).__qualname__}"
        == "sympy.matrices.dense.MutableDenseMatrix"
    )
    assert len(var_0.f_3) == 0
    assert (
        f"{type(var_0.f_4).__module__}.{type(var_0.f_4).__qualname__}"
        == "sympy.matrices.dense.MutableDenseMatrix"
    )
    assert len(var_0.f_4) == 0
    assert (
        f"{type(var_0.f_c).__module__}.{type(var_0.f_c).__qualname__}"
        == "sympy.matrices.dense.MutableDenseMatrix"
    )
    assert len(var_0.f_c) == 0
    assert (
        f"{type(var_0.f_v).__module__}.{type(var_0.f_v).__qualname__}"
        == "sympy.matrices.dense.MutableDenseMatrix"
    )
    assert len(var_0.f_v) == 0
    assert (
        f"{type(var_0.f_a).__module__}.{type(var_0.f_a).__qualname__}"
        == "sympy.matrices.dense.MutableDenseMatrix"
    )
    assert len(var_0.f_a) == 0
    assert (
        f"{type(var_0.q).__module__}.{type(var_0.q).__qualname__}"
        == "sympy.matrices.dense.MutableDenseMatrix"
    )
    assert len(var_0.q) == 0
    assert (
        f"{type(var_0.u).__module__}.{type(var_0.u).__qualname__}"
        == "sympy.matrices.dense.MutableDenseMatrix"
    )
    assert len(var_0.u) == 0
    assert (
        f"{type(var_0.q_i).__module__}.{type(var_0.q_i).__qualname__}"
        == "sympy.matrices.dense.MutableDenseMatrix"
    )
    assert len(var_0.q_i) == 0
    assert (
        f"{type(var_0.q_d).__module__}.{type(var_0.q_d).__qualname__}"
        == "sympy.matrices.dense.MutableDenseMatrix"
    )
    assert len(var_0.q_d) == 0
    assert (
        f"{type(var_0.u_i).__module__}.{type(var_0.u_i).__qualname__}"
        == "sympy.matrices.dense.MutableDenseMatrix"
    )
    assert len(var_0.u_i) == 0
    assert (
        f"{type(var_0.u_d).__module__}.{type(var_0.u_d).__qualname__}"
        == "sympy.matrices.dense.MutableDenseMatrix"
    )
    assert len(var_0.u_d) == 0
    assert (
        f"{type(var_0.r).__module__}.{type(var_0.r).__qualname__}"
        == "sympy.matrices.dense.MutableDenseMatrix"
    )
    assert len(var_0.r) == 0
    assert (
        f"{type(var_0.lams).__module__}.{type(var_0.lams).__qualname__}"
        == "sympy.matrices.dense.MutableDenseMatrix"
    )
    assert len(var_0.lams) == 0
    assert var_0.perm_mat is None


def test_case_10():
    bytes_0 = b""
    lagranges_method_0 = module_0.LagrangesMethod(bytes_0, bytes_0)
    assert (
        f"{type(lagranges_method_0).__module__}.{type(lagranges_method_0).__qualname__}"
        == "sympy.physics.mechanics.lagrange.LagrangesMethod"
    )
    assert lagranges_method_0.eom is None
    assert (
        f"{type(lagranges_method_0.lam_coeffs).__module__}.{type(lagranges_method_0.lam_coeffs).__qualname__}"
        == "sympy.matrices.dense.MutableDenseMatrix"
    )
    assert len(lagranges_method_0.lam_coeffs) == 0
    assert lagranges_method_0.inertial is None
    assert (
        f"{type(lagranges_method_0.lam_vec).__module__}.{type(lagranges_method_0.lam_vec).__qualname__}"
        == "sympy.matrices.dense.MutableDenseMatrix"
    )
    assert len(lagranges_method_0.lam_vec) == 0
    assert (
        f"{type(lagranges_method_0.coneqs).__module__}.{type(lagranges_method_0.coneqs).__qualname__}"
        == "sympy.matrices.dense.MutableDenseMatrix"
    )
    assert len(lagranges_method_0.coneqs) == 0
    assert (
        f"{type(module_0.LagrangesMethod.mass_matrix).__module__}.{type(module_0.LagrangesMethod.mass_matrix).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.mass_matrix_full).__module__}.{type(module_0.LagrangesMethod.mass_matrix_full).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.forcing).__module__}.{type(module_0.LagrangesMethod.forcing).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.forcing_full).__module__}.{type(module_0.LagrangesMethod.forcing_full).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.q).__module__}.{type(module_0.LagrangesMethod.q).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.u).__module__}.{type(module_0.LagrangesMethod.u).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.bodies).__module__}.{type(module_0.LagrangesMethod.bodies).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.forcelist).__module__}.{type(module_0.LagrangesMethod.forcelist).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.loads).__module__}.{type(module_0.LagrangesMethod.loads).__qualname__}"
        == "builtins.property"
    )
    bytes_1 = b"\xbd)\x17"
    with pytest.raises(ValueError):
        lagranges_method_0.to_linearizer(q_dep=bytes_1)


@pytest.mark.xfail(strict=True)
def test_case_11():
    bytes_0 = b""
    lagranges_method_0 = module_0.LagrangesMethod(bytes_0, bytes_0, bytes_0)
    assert (
        f"{type(lagranges_method_0).__module__}.{type(lagranges_method_0).__qualname__}"
        == "sympy.physics.mechanics.lagrange.LagrangesMethod"
    )
    assert lagranges_method_0.eom is None
    assert (
        f"{type(lagranges_method_0.lam_coeffs).__module__}.{type(lagranges_method_0.lam_coeffs).__qualname__}"
        == "sympy.matrices.dense.MutableDenseMatrix"
    )
    assert len(lagranges_method_0.lam_coeffs) == 0
    assert lagranges_method_0.inertial is None
    assert (
        f"{type(lagranges_method_0.lam_vec).__module__}.{type(lagranges_method_0.lam_vec).__qualname__}"
        == "sympy.matrices.dense.MutableDenseMatrix"
    )
    assert len(lagranges_method_0.lam_vec) == 0
    assert (
        f"{type(lagranges_method_0.coneqs).__module__}.{type(lagranges_method_0.coneqs).__qualname__}"
        == "sympy.matrices.dense.MutableDenseMatrix"
    )
    assert len(lagranges_method_0.coneqs) == 0
    assert (
        f"{type(module_0.LagrangesMethod.mass_matrix).__module__}.{type(module_0.LagrangesMethod.mass_matrix).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.mass_matrix_full).__module__}.{type(module_0.LagrangesMethod.mass_matrix_full).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.forcing).__module__}.{type(module_0.LagrangesMethod.forcing).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.forcing_full).__module__}.{type(module_0.LagrangesMethod.forcing_full).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.q).__module__}.{type(module_0.LagrangesMethod.q).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.u).__module__}.{type(module_0.LagrangesMethod.u).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.bodies).__module__}.{type(module_0.LagrangesMethod.bodies).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.forcelist).__module__}.{type(module_0.LagrangesMethod.forcelist).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.loads).__module__}.{type(module_0.LagrangesMethod.loads).__qualname__}"
        == "builtins.property"
    )
    lagranges_method_0.linearize(q_dep=bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_12():
    bytes_0 = b""
    lagranges_method_0 = module_0.LagrangesMethod(bytes_0, bytes_0)
    assert (
        f"{type(lagranges_method_0).__module__}.{type(lagranges_method_0).__qualname__}"
        == "sympy.physics.mechanics.lagrange.LagrangesMethod"
    )
    assert lagranges_method_0.eom is None
    assert (
        f"{type(lagranges_method_0.lam_coeffs).__module__}.{type(lagranges_method_0.lam_coeffs).__qualname__}"
        == "sympy.matrices.dense.MutableDenseMatrix"
    )
    assert len(lagranges_method_0.lam_coeffs) == 0
    assert lagranges_method_0.inertial is None
    assert (
        f"{type(lagranges_method_0.lam_vec).__module__}.{type(lagranges_method_0.lam_vec).__qualname__}"
        == "sympy.matrices.dense.MutableDenseMatrix"
    )
    assert len(lagranges_method_0.lam_vec) == 0
    assert (
        f"{type(lagranges_method_0.coneqs).__module__}.{type(lagranges_method_0.coneqs).__qualname__}"
        == "sympy.matrices.dense.MutableDenseMatrix"
    )
    assert len(lagranges_method_0.coneqs) == 0
    assert (
        f"{type(module_0.LagrangesMethod.mass_matrix).__module__}.{type(module_0.LagrangesMethod.mass_matrix).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.mass_matrix_full).__module__}.{type(module_0.LagrangesMethod.mass_matrix_full).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.forcing).__module__}.{type(module_0.LagrangesMethod.forcing).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.forcing_full).__module__}.{type(module_0.LagrangesMethod.forcing_full).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.q).__module__}.{type(module_0.LagrangesMethod.q).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.u).__module__}.{type(module_0.LagrangesMethod.u).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.bodies).__module__}.{type(module_0.LagrangesMethod.bodies).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.forcelist).__module__}.{type(module_0.LagrangesMethod.forcelist).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.loads).__module__}.{type(module_0.LagrangesMethod.loads).__qualname__}"
        == "builtins.property"
    )
    lagranges_method_0.forcing()


def test_case_13():
    bytes_0 = b""
    lagranges_method_0 = module_0.LagrangesMethod(bytes_0, bytes_0, bytes_0)
    assert (
        f"{type(lagranges_method_0).__module__}.{type(lagranges_method_0).__qualname__}"
        == "sympy.physics.mechanics.lagrange.LagrangesMethod"
    )
    assert lagranges_method_0.eom is None
    assert (
        f"{type(lagranges_method_0.lam_coeffs).__module__}.{type(lagranges_method_0.lam_coeffs).__qualname__}"
        == "sympy.matrices.dense.MutableDenseMatrix"
    )
    assert len(lagranges_method_0.lam_coeffs) == 0
    assert lagranges_method_0.inertial is None
    assert (
        f"{type(lagranges_method_0.lam_vec).__module__}.{type(lagranges_method_0.lam_vec).__qualname__}"
        == "sympy.matrices.dense.MutableDenseMatrix"
    )
    assert len(lagranges_method_0.lam_vec) == 0
    assert (
        f"{type(lagranges_method_0.coneqs).__module__}.{type(lagranges_method_0.coneqs).__qualname__}"
        == "sympy.matrices.dense.MutableDenseMatrix"
    )
    assert len(lagranges_method_0.coneqs) == 0
    assert (
        f"{type(module_0.LagrangesMethod.mass_matrix).__module__}.{type(module_0.LagrangesMethod.mass_matrix).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.mass_matrix_full).__module__}.{type(module_0.LagrangesMethod.mass_matrix_full).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.forcing).__module__}.{type(module_0.LagrangesMethod.forcing).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.forcing_full).__module__}.{type(module_0.LagrangesMethod.forcing_full).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.q).__module__}.{type(module_0.LagrangesMethod.q).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.u).__module__}.{type(module_0.LagrangesMethod.u).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.bodies).__module__}.{type(module_0.LagrangesMethod.bodies).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.forcelist).__module__}.{type(module_0.LagrangesMethod.forcelist).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.loads).__module__}.{type(module_0.LagrangesMethod.loads).__qualname__}"
        == "builtins.property"
    )
    with pytest.raises(ValueError):
        lagranges_method_0.solve_multipliers()


@pytest.mark.xfail(strict=True)
def test_case_14():
    bytes_0 = b""
    lagranges_method_0 = module_0.LagrangesMethod(bytes_0, bytes_0, bytes_0)
    assert (
        f"{type(lagranges_method_0).__module__}.{type(lagranges_method_0).__qualname__}"
        == "sympy.physics.mechanics.lagrange.LagrangesMethod"
    )
    assert lagranges_method_0.eom is None
    assert (
        f"{type(lagranges_method_0.lam_coeffs).__module__}.{type(lagranges_method_0.lam_coeffs).__qualname__}"
        == "sympy.matrices.dense.MutableDenseMatrix"
    )
    assert len(lagranges_method_0.lam_coeffs) == 0
    assert lagranges_method_0.inertial is None
    assert (
        f"{type(lagranges_method_0.lam_vec).__module__}.{type(lagranges_method_0.lam_vec).__qualname__}"
        == "sympy.matrices.dense.MutableDenseMatrix"
    )
    assert len(lagranges_method_0.lam_vec) == 0
    assert (
        f"{type(lagranges_method_0.coneqs).__module__}.{type(lagranges_method_0.coneqs).__qualname__}"
        == "sympy.matrices.dense.MutableDenseMatrix"
    )
    assert len(lagranges_method_0.coneqs) == 0
    assert (
        f"{type(module_0.LagrangesMethod.mass_matrix).__module__}.{type(module_0.LagrangesMethod.mass_matrix).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.mass_matrix_full).__module__}.{type(module_0.LagrangesMethod.mass_matrix_full).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.forcing).__module__}.{type(module_0.LagrangesMethod.forcing).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.forcing_full).__module__}.{type(module_0.LagrangesMethod.forcing_full).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.q).__module__}.{type(module_0.LagrangesMethod.q).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.u).__module__}.{type(module_0.LagrangesMethod.u).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.bodies).__module__}.{type(module_0.LagrangesMethod.bodies).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.forcelist).__module__}.{type(module_0.LagrangesMethod.forcelist).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.loads).__module__}.{type(module_0.LagrangesMethod.loads).__qualname__}"
        == "builtins.property"
    )
    lagranges_method_0.rhs(lagranges_method_0)


def test_case_15():
    bytes_0 = b""
    lagranges_method_0 = module_0.LagrangesMethod(bytes_0, bytes_0, bytes_0)
    assert (
        f"{type(lagranges_method_0).__module__}.{type(lagranges_method_0).__qualname__}"
        == "sympy.physics.mechanics.lagrange.LagrangesMethod"
    )
    assert lagranges_method_0.eom is None
    assert (
        f"{type(lagranges_method_0.lam_coeffs).__module__}.{type(lagranges_method_0.lam_coeffs).__qualname__}"
        == "sympy.matrices.dense.MutableDenseMatrix"
    )
    assert len(lagranges_method_0.lam_coeffs) == 0
    assert lagranges_method_0.inertial is None
    assert (
        f"{type(lagranges_method_0.lam_vec).__module__}.{type(lagranges_method_0.lam_vec).__qualname__}"
        == "sympy.matrices.dense.MutableDenseMatrix"
    )
    assert len(lagranges_method_0.lam_vec) == 0
    assert (
        f"{type(lagranges_method_0.coneqs).__module__}.{type(lagranges_method_0.coneqs).__qualname__}"
        == "sympy.matrices.dense.MutableDenseMatrix"
    )
    assert len(lagranges_method_0.coneqs) == 0
    assert (
        f"{type(module_0.LagrangesMethod.mass_matrix).__module__}.{type(module_0.LagrangesMethod.mass_matrix).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.mass_matrix_full).__module__}.{type(module_0.LagrangesMethod.mass_matrix_full).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.forcing).__module__}.{type(module_0.LagrangesMethod.forcing).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.forcing_full).__module__}.{type(module_0.LagrangesMethod.forcing_full).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.q).__module__}.{type(module_0.LagrangesMethod.q).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.u).__module__}.{type(module_0.LagrangesMethod.u).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.bodies).__module__}.{type(module_0.LagrangesMethod.bodies).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.forcelist).__module__}.{type(module_0.LagrangesMethod.forcelist).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.loads).__module__}.{type(module_0.LagrangesMethod.loads).__qualname__}"
        == "builtins.property"
    )
    bytes_1 = b"\xc4`\xde"
    with pytest.raises(ValueError):
        lagranges_method_0.to_linearizer(qd_ind=bytes_1)


@pytest.mark.xfail(strict=True)
def test_case_16():
    bytes_0 = b""
    lagranges_method_0 = module_0.LagrangesMethod(bytes_0, bytes_0, bytes_0)
    assert (
        f"{type(lagranges_method_0).__module__}.{type(lagranges_method_0).__qualname__}"
        == "sympy.physics.mechanics.lagrange.LagrangesMethod"
    )
    assert lagranges_method_0.eom is None
    assert (
        f"{type(lagranges_method_0.lam_coeffs).__module__}.{type(lagranges_method_0.lam_coeffs).__qualname__}"
        == "sympy.matrices.dense.MutableDenseMatrix"
    )
    assert len(lagranges_method_0.lam_coeffs) == 0
    assert lagranges_method_0.inertial is None
    assert (
        f"{type(lagranges_method_0.lam_vec).__module__}.{type(lagranges_method_0.lam_vec).__qualname__}"
        == "sympy.matrices.dense.MutableDenseMatrix"
    )
    assert len(lagranges_method_0.lam_vec) == 0
    assert (
        f"{type(lagranges_method_0.coneqs).__module__}.{type(lagranges_method_0.coneqs).__qualname__}"
        == "sympy.matrices.dense.MutableDenseMatrix"
    )
    assert len(lagranges_method_0.coneqs) == 0
    assert (
        f"{type(module_0.LagrangesMethod.mass_matrix).__module__}.{type(module_0.LagrangesMethod.mass_matrix).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.mass_matrix_full).__module__}.{type(module_0.LagrangesMethod.mass_matrix_full).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.forcing).__module__}.{type(module_0.LagrangesMethod.forcing).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.forcing_full).__module__}.{type(module_0.LagrangesMethod.forcing_full).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.q).__module__}.{type(module_0.LagrangesMethod.q).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.u).__module__}.{type(module_0.LagrangesMethod.u).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.bodies).__module__}.{type(module_0.LagrangesMethod.bodies).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.forcelist).__module__}.{type(module_0.LagrangesMethod.forcelist).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.loads).__module__}.{type(module_0.LagrangesMethod.loads).__qualname__}"
        == "builtins.property"
    )
    bytes_1 = b"\xc4\x85\xde"
    lagranges_method_1 = module_0.LagrangesMethod(
        bytes_1, bytes_0, nonhol_coneqs=bytes_1
    )
    lagranges_method_1.rhs()


@pytest.mark.xfail(strict=True)
def test_case_17():
    bytes_0 = b""
    lagranges_method_0 = module_0.LagrangesMethod(bytes_0, bytes_0, bytes_0)
    assert (
        f"{type(lagranges_method_0).__module__}.{type(lagranges_method_0).__qualname__}"
        == "sympy.physics.mechanics.lagrange.LagrangesMethod"
    )
    assert lagranges_method_0.eom is None
    assert (
        f"{type(lagranges_method_0.lam_coeffs).__module__}.{type(lagranges_method_0.lam_coeffs).__qualname__}"
        == "sympy.matrices.dense.MutableDenseMatrix"
    )
    assert len(lagranges_method_0.lam_coeffs) == 0
    assert lagranges_method_0.inertial is None
    assert (
        f"{type(lagranges_method_0.lam_vec).__module__}.{type(lagranges_method_0.lam_vec).__qualname__}"
        == "sympy.matrices.dense.MutableDenseMatrix"
    )
    assert len(lagranges_method_0.lam_vec) == 0
    assert (
        f"{type(lagranges_method_0.coneqs).__module__}.{type(lagranges_method_0.coneqs).__qualname__}"
        == "sympy.matrices.dense.MutableDenseMatrix"
    )
    assert len(lagranges_method_0.coneqs) == 0
    assert (
        f"{type(module_0.LagrangesMethod.mass_matrix).__module__}.{type(module_0.LagrangesMethod.mass_matrix).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.mass_matrix_full).__module__}.{type(module_0.LagrangesMethod.mass_matrix_full).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.forcing).__module__}.{type(module_0.LagrangesMethod.forcing).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.forcing_full).__module__}.{type(module_0.LagrangesMethod.forcing_full).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.q).__module__}.{type(module_0.LagrangesMethod.q).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.u).__module__}.{type(module_0.LagrangesMethod.u).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.bodies).__module__}.{type(module_0.LagrangesMethod.bodies).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.forcelist).__module__}.{type(module_0.LagrangesMethod.forcelist).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.loads).__module__}.{type(module_0.LagrangesMethod.loads).__qualname__}"
        == "builtins.property"
    )
    lagranges_method_0.bodies()


@pytest.mark.xfail(strict=True)
def test_case_18():
    bytes_0 = b""
    lagranges_method_0 = module_0.LagrangesMethod(bytes_0, bytes_0, bytes_0)
    assert (
        f"{type(lagranges_method_0).__module__}.{type(lagranges_method_0).__qualname__}"
        == "sympy.physics.mechanics.lagrange.LagrangesMethod"
    )
    assert lagranges_method_0.eom is None
    assert (
        f"{type(lagranges_method_0.lam_coeffs).__module__}.{type(lagranges_method_0.lam_coeffs).__qualname__}"
        == "sympy.matrices.dense.MutableDenseMatrix"
    )
    assert len(lagranges_method_0.lam_coeffs) == 0
    assert lagranges_method_0.inertial is None
    assert (
        f"{type(lagranges_method_0.lam_vec).__module__}.{type(lagranges_method_0.lam_vec).__qualname__}"
        == "sympy.matrices.dense.MutableDenseMatrix"
    )
    assert len(lagranges_method_0.lam_vec) == 0
    assert (
        f"{type(lagranges_method_0.coneqs).__module__}.{type(lagranges_method_0.coneqs).__qualname__}"
        == "sympy.matrices.dense.MutableDenseMatrix"
    )
    assert len(lagranges_method_0.coneqs) == 0
    assert (
        f"{type(module_0.LagrangesMethod.mass_matrix).__module__}.{type(module_0.LagrangesMethod.mass_matrix).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.mass_matrix_full).__module__}.{type(module_0.LagrangesMethod.mass_matrix_full).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.forcing).__module__}.{type(module_0.LagrangesMethod.forcing).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.forcing_full).__module__}.{type(module_0.LagrangesMethod.forcing_full).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.q).__module__}.{type(module_0.LagrangesMethod.q).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.u).__module__}.{type(module_0.LagrangesMethod.u).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.bodies).__module__}.{type(module_0.LagrangesMethod.bodies).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.forcelist).__module__}.{type(module_0.LagrangesMethod.forcelist).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.loads).__module__}.{type(module_0.LagrangesMethod.loads).__qualname__}"
        == "builtins.property"
    )
    lagranges_method_0.loads()


def test_case_19():
    bytes_0 = b""
    none_type_0 = None
    bytes_1 = b'\x8a\xf6_\xe4E\xb8\xd2^\xb9"\x19\x95\xf5\x0e\x022_'
    tuple_0 = (bytes_1,)
    lagranges_method_0 = module_0.LagrangesMethod(
        none_type_0, bytes_0, bodies=bytes_0, nonhol_coneqs=tuple_0
    )
    assert (
        f"{type(lagranges_method_0).__module__}.{type(lagranges_method_0).__qualname__}"
        == "sympy.physics.mechanics.lagrange.LagrangesMethod"
    )
    assert lagranges_method_0.eom is None
    assert (
        f"{type(lagranges_method_0.lam_coeffs).__module__}.{type(lagranges_method_0.lam_coeffs).__qualname__}"
        == "sympy.matrices.dense.MutableDenseMatrix"
    )
    assert len(lagranges_method_0.lam_coeffs) == 0
    assert lagranges_method_0.inertial is None
    assert (
        f"{type(lagranges_method_0.lam_vec).__module__}.{type(lagranges_method_0.lam_vec).__qualname__}"
        == "sympy.matrices.dense.MutableDenseMatrix"
    )
    assert len(lagranges_method_0.lam_vec) == 0
    assert (
        f"{type(lagranges_method_0.coneqs).__module__}.{type(lagranges_method_0.coneqs).__qualname__}"
        == "sympy.matrices.dense.MutableDenseMatrix"
    )
    assert len(lagranges_method_0.coneqs) == 17
    assert (
        f"{type(module_0.LagrangesMethod.mass_matrix).__module__}.{type(module_0.LagrangesMethod.mass_matrix).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.mass_matrix_full).__module__}.{type(module_0.LagrangesMethod.mass_matrix_full).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.forcing).__module__}.{type(module_0.LagrangesMethod.forcing).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.forcing_full).__module__}.{type(module_0.LagrangesMethod.forcing_full).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.q).__module__}.{type(module_0.LagrangesMethod.q).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.u).__module__}.{type(module_0.LagrangesMethod.u).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.bodies).__module__}.{type(module_0.LagrangesMethod.bodies).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.forcelist).__module__}.{type(module_0.LagrangesMethod.forcelist).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.loads).__module__}.{type(module_0.LagrangesMethod.loads).__qualname__}"
        == "builtins.property"
    )
    with pytest.raises(ValueError):
        lagranges_method_0.to_linearizer()


def test_case_20():
    bytes_0 = b""
    none_type_0 = None
    lagranges_method_0 = module_0.LagrangesMethod(none_type_0, bytes_0, none_type_0)
    assert (
        f"{type(lagranges_method_0).__module__}.{type(lagranges_method_0).__qualname__}"
        == "sympy.physics.mechanics.lagrange.LagrangesMethod"
    )
    assert lagranges_method_0.eom is None
    assert (
        f"{type(lagranges_method_0.lam_coeffs).__module__}.{type(lagranges_method_0.lam_coeffs).__qualname__}"
        == "sympy.matrices.dense.MutableDenseMatrix"
    )
    assert len(lagranges_method_0.lam_coeffs) == 0
    assert lagranges_method_0.inertial is None
    assert (
        f"{type(lagranges_method_0.lam_vec).__module__}.{type(lagranges_method_0.lam_vec).__qualname__}"
        == "sympy.matrices.dense.MutableDenseMatrix"
    )
    assert len(lagranges_method_0.lam_vec) == 0
    assert (
        f"{type(lagranges_method_0.coneqs).__module__}.{type(lagranges_method_0.coneqs).__qualname__}"
        == "sympy.matrices.dense.MutableDenseMatrix"
    )
    assert len(lagranges_method_0.coneqs) == 0
    assert (
        f"{type(module_0.LagrangesMethod.mass_matrix).__module__}.{type(module_0.LagrangesMethod.mass_matrix).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.mass_matrix_full).__module__}.{type(module_0.LagrangesMethod.mass_matrix_full).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.forcing).__module__}.{type(module_0.LagrangesMethod.forcing).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.forcing_full).__module__}.{type(module_0.LagrangesMethod.forcing_full).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.q).__module__}.{type(module_0.LagrangesMethod.q).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.u).__module__}.{type(module_0.LagrangesMethod.u).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.bodies).__module__}.{type(module_0.LagrangesMethod.bodies).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.forcelist).__module__}.{type(module_0.LagrangesMethod.forcelist).__qualname__}"
        == "builtins.property"
    )
    assert (
        f"{type(module_0.LagrangesMethod.loads).__module__}.{type(module_0.LagrangesMethod.loads).__qualname__}"
        == "builtins.property"
    )
    int_0 = 1636
    tuple_0 = (int_0, int_0)
    with pytest.raises(ValueError):
        lagranges_method_0.to_linearizer(
            tuple_0, q_dep=none_type_0, linear_solver=none_type_0
        )
